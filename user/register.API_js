{"POST":"let name = param('name', null);\r\nlet lastName = param('lastName', null);\r\nlet email = param('email', null);\r\nlet password = param('password', null);\r\nlet File = param('picture_name');\r\nlet gender = param('gender', null);\r\nlet height = param('height', null);\r\nlet weight = param('weight', null);\r\nlet fitnessLevel = param('fitness_level', null);\r\nlet fitnessGoal = param('fitness_goal', null);\r\nlet dateOfBirth = param('date_of_birth', null)\r\n\r\nif (name == null || lastName == null || email == null || password == null || gender == null) {\r\n  write('message', 'Missing parameter');\r\n  exit();\r\n}\r\n\r\n//Check for duplicate email\r\nlet duplicate = db.query('SELECT 1 FROM users WHERE users_email = ?', email);\r\nif (duplicate.length > 0) {\r\n  write('message', 'There is already a user with that email');\r\n  exit();\r\n}\r\n\r\nlet pictureParam = {\r\n  picture_name: File,\r\n}\r\n\r\nlet insertPictureSql = `INSERT INTO picture (picture_name) VALUES (:picture_name)`\r\nlet insertPictureQuery = db.query(insertPictureSql, pictureParam);\r\nlet pictureId = insertPictureQuery[0].id;\r\n\r\n\r\n\r\n  // Insert data into the 'body_measurement' table\r\nlet bodyMeasurementParam = {\r\n  body_measurement_gender: gender,\r\n  body_measurement_height: height,\r\n  body_measurement_weight: weight,\r\n  body_measurement_fitness_level: fitnessLevel\r\n}\r\nlet insertBodyMeasurementSql = `INSERT INTO body_measurement (body_measurement_gender, body_measurement_height, body_measurement_weight, body_measurement_fitness_level) VALUES (:body_measurement_gender, :body_measurement_height, :body_measurement_weight, :body_measurement_fitness_level)`\r\nlet insertBodyMeasurementQuery = db.query(insertBodyMeasurementSql, bodyMeasurementParam);\r\nlet bodyMeasurementId = insertBodyMeasurementQuery[0].id;\r\n\r\n//Insert data into the 'users' table with obtained foreign key values\r\nlet userParam = {\r\n    users_first_name: name,\r\n    users_last_name: lastName,\r\n    users_email: email,\r\n    users_password: bcrypt(password),\r\n    users_date_of_birth: dateOfBirth,\r\n    picture_id: pictureId,\r\n    body_measurement_id: bodyMeasurementId,\r\n    fitness_goal: fitnessGoal\r\n  }\r\nlet insertUserSql = `INSERT INTO users (picture_id, body_measurment_id, fitness_goal_id, users_first_name, users_last_name, users_email, \r\nusers_password, users_date_of_birth) \r\nVALUES (:picture_id, :body_measurement_id, :fitness_goal, :users_first_name, :users_last_name, :users_email, :users_password, :users_date_of_birth)`\r\nlet insertUserQuery = db.query(insertUserSql, userParam);\r\nlet userId = insertUserQuery[0].id;\r\n\r\nlet userRoleParam = {\r\n  users_id: userId,\r\n\r\n}\r\n\r\nlet insertUserRole = `INSERT INTO user_roles (users_id, roles_id) VALUES (:users_id, 2)`\r\nlet insertUserRoleQuery = db.query(insertUserRole, userRoleParam);\r\n\r\n\r\nwrite('userId', userId);\r\nwrite('message', 'User Registered');\r\n","META":{"language":"JavaScript"}}